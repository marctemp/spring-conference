--
-- PostgreSQL database dump
--

-- Dumped from database version 14.1
-- Dumped by pg_dump version 14.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: attendee_tickets; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.attendee_tickets (
    attendee_ticket_id integer NOT NULL,
    attendee_id integer NOT NULL,
    ticket_price_id integer NOT NULL,
    discount_code_id integer,
    net_price numeric(8,2) NOT NULL
);


--
-- Name: attendee_tickets_attendee_ticket_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.attendee_tickets_attendee_ticket_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: attendee_tickets_attendee_ticket_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.attendee_tickets_attendee_ticket_id_seq OWNED BY public.attendee_tickets.attendee_ticket_id;


--
-- Name: attendees; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.attendees (
    attendee_id integer NOT NULL,
    first_name character varying(30) NOT NULL,
    last_name character varying(30) NOT NULL,
    title character varying(40),
    company character varying(50),
    email character varying(80) NOT NULL,
    phone_number character varying(20)
);


--
-- Name: attendees_attendee_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.attendees_attendee_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: attendees_attendee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.attendees_attendee_id_seq OWNED BY public.attendees.attendee_id;


--
-- Name: discount_codes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.discount_codes (
    discount_code_id integer NOT NULL,
    discount_code character varying(20) NOT NULL,
    discount_name character varying(30) NOT NULL,
    discount_type character varying(1) NOT NULL,
    discount_amount numeric(8,2) NOT NULL
);


--
-- Name: discount_codes_discount_code_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.discount_codes_discount_code_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: discount_codes_discount_code_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.discount_codes_discount_code_id_seq OWNED BY public.discount_codes.discount_code_id;


--
-- Name: pricing_categories; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.pricing_categories (
    pricing_category_code character varying(1) NOT NULL,
    pricing_category_name character varying(20) NOT NULL,
    pricing_start_date date NOT NULL,
    pricing_end_date date NOT NULL
);


--
-- Name: session_schedule; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.session_schedule (
    schedule_id integer NOT NULL,
    time_slot_id integer NOT NULL,
    session_id integer NOT NULL,
    room character varying(30) NOT NULL
);


--
-- Name: session_schedule_schedule_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.session_schedule_schedule_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: session_schedule_schedule_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.session_schedule_schedule_id_seq OWNED BY public.session_schedule.schedule_id;


--
-- Name: session_speakers; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.session_speakers (
    session_id integer NOT NULL,
    speaker_id integer NOT NULL
);


--
-- Name: session_tags; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.session_tags (
    session_id integer NOT NULL,
    tag_id integer NOT NULL
);


--
-- Name: sessions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.sessions (
    session_id integer NOT NULL,
    session_name character varying(80) NOT NULL,
    session_description character varying(1024) NOT NULL,
    session_length integer NOT NULL
);


--
-- Name: sessions_session_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.sessions_session_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sessions_session_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.sessions_session_id_seq OWNED BY public.sessions.session_id;


--
-- Name: speakers; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.speakers (
    speaker_id integer NOT NULL,
    first_name character varying(30) NOT NULL,
    last_name character varying(30) NOT NULL,
    title character varying(40) NOT NULL,
    company character varying(50) NOT NULL,
    speaker_bio character varying(2000) NOT NULL,
    speaker_photo bytea
);


--
-- Name: speakers_speaker_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.speakers_speaker_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: speakers_speaker_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.speakers_speaker_id_seq OWNED BY public.speakers.speaker_id;


--
-- Name: tags; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.tags (
    tag_id integer NOT NULL,
    description character varying(30) NOT NULL
);


--
-- Name: tags_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.tags_tag_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tags_tag_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.tags_tag_id_seq OWNED BY public.tags.tag_id;


--
-- Name: ticket_prices; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.ticket_prices (
    ticket_price_id integer NOT NULL,
    ticket_type_code character varying(1) NOT NULL,
    pricing_category_code character varying(1) NOT NULL,
    base_price numeric(8,2) NOT NULL
);


--
-- Name: ticket_prices_ticket_price_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.ticket_prices_ticket_price_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ticket_prices_ticket_price_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.ticket_prices_ticket_price_id_seq OWNED BY public.ticket_prices.ticket_price_id;


--
-- Name: ticket_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.ticket_types (
    ticket_type_code character varying(1) NOT NULL,
    ticket_type_name character varying(30) NOT NULL,
    description character varying(100) NOT NULL,
    includes_workshop boolean NOT NULL
);


--
-- Name: time_slots; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.time_slots (
    time_slot_id integer NOT NULL,
    time_slot_date date NOT NULL,
    start_time time without time zone NOT NULL,
    end_time time without time zone NOT NULL,
    is_keynote_time_slot boolean DEFAULT false NOT NULL
);


--
-- Name: time_slots_time_slot_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.time_slots_time_slot_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: time_slots_time_slot_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.time_slots_time_slot_id_seq OWNED BY public.time_slots.time_slot_id;


--
-- Name: workshop_registrations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.workshop_registrations (
    workshop_id integer NOT NULL,
    attendee_ticket_id integer NOT NULL
);


--
-- Name: workshop_speakers; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.workshop_speakers (
    workshop_id integer NOT NULL,
    speaker_id integer NOT NULL
);


--
-- Name: workshops; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.workshops (
    workshop_id integer NOT NULL,
    workshop_name character varying(60) NOT NULL,
    description character varying(1024) NOT NULL,
    requirements character varying(1024) NOT NULL,
    room character varying(30) NOT NULL,
    capacity integer NOT NULL
);


--
-- Name: workshops_workshop_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.workshops_workshop_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: workshops_workshop_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.workshops_workshop_id_seq OWNED BY public.workshops.workshop_id;


--
-- Name: attendee_tickets attendee_ticket_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.attendee_tickets ALTER COLUMN attendee_ticket_id SET DEFAULT nextval('public.attendee_tickets_attendee_ticket_id_seq'::regclass);


--
-- Name: attendees attendee_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.attendees ALTER COLUMN attendee_id SET DEFAULT nextval('public.attendees_attendee_id_seq'::regclass);


--
-- Name: discount_codes discount_code_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.discount_codes ALTER COLUMN discount_code_id SET DEFAULT nextval('public.discount_codes_discount_code_id_seq'::regclass);


--
-- Name: session_schedule schedule_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.session_schedule ALTER COLUMN schedule_id SET DEFAULT nextval('public.session_schedule_schedule_id_seq'::regclass);


--
-- Name: sessions session_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.sessions ALTER COLUMN session_id SET DEFAULT nextval('public.sessions_session_id_seq'::regclass);


--
-- Name: speakers speaker_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.speakers ALTER COLUMN speaker_id SET DEFAULT nextval('public.speakers_speaker_id_seq'::regclass);


--
-- Name: tags tag_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tags ALTER COLUMN tag_id SET DEFAULT nextval('public.tags_tag_id_seq'::regclass);


--
-- Name: ticket_prices ticket_price_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ticket_prices ALTER COLUMN ticket_price_id SET DEFAULT nextval('public.ticket_prices_ticket_price_id_seq'::regclass);


--
-- Name: time_slots time_slot_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.time_slots ALTER COLUMN time_slot_id SET DEFAULT nextval('public.time_slots_time_slot_id_seq'::regclass);


--
-- Name: workshops workshop_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workshops ALTER COLUMN workshop_id SET DEFAULT nextval('public.workshops_workshop_id_seq'::regclass);


--
-- Data for Name: attendee_tickets; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.attendee_tickets (attendee_ticket_id, attendee_id, ticket_price_id, discount_code_id, net_price) FROM stdin;
\.


--
-- Data for Name: attendees; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.attendees (attendee_id, first_name, last_name, title, company, email, phone_number) FROM stdin;
\.


--
-- Data for Name: discount_codes; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.discount_codes (discount_code_id, discount_code, discount_name, discount_type, discount_amount) FROM stdin;
\.


--
-- Data for Name: pricing_categories; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.pricing_categories (pricing_category_code, pricing_category_name, pricing_start_date, pricing_end_date) FROM stdin;
E	Early Bird	2019-12-01	2020-01-15
R	Regular	2020-01-16	2020-03-20
L	Last Minute	2020-03-21	2020-04-07
\.


--
-- Data for Name: session_schedule; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.session_schedule (schedule_id, time_slot_id, session_id, room) FROM stdin;
1	1	1	Grand Ballroom
2	2	2	Cedar
3	4	3	Cedar
4	5	4	Cedar
5	7	5	Cedar
6	8	6	Cedar
7	11	7	Cedar
8	3	8	Cedar
9	6	9	Cedar
10	9	10	Cedar
11	10	11	Cedar
12	2	12	Cherry
13	4	13	Cherry
14	5	14	Cherry
15	7	15	Cherry
16	8	16	Cherry
17	11	17	Cherry
18	3	18	Cherry
19	6	19	Cherry
20	9	20	Cherry
21	10	21	Cherry
22	2	22	Maple
23	4	23	Maple
24	5	24	Maple
25	7	25	Maple
26	8	26	Maple
27	11	27	Maple
28	3	28	Maple
29	6	29	Maple
30	9	30	Maple
31	10	31	Maple
32	2	32	Aspen
33	4	33	Aspen
34	5	34	Aspen
35	7	35	Aspen
36	8	36	Aspen
37	11	37	Aspen
38	3	38	Aspen
39	6	39	Aspen
40	9	40	Aspen
41	10	41	Aspen
42	2	42	Hickory
43	4	43	Hickory
44	5	44	Hickory
45	7	45	Hickory
46	8	46	Hickory
47	11	47	Hickory
48	3	48	Hickory
49	6	49	Hickory
50	9	50	Hickory
51	10	51	Hickory
62	2	62	Cottonwood
63	4	63	Cottonwood
64	5	64	Cottonwood
65	7	65	Cottonwood
66	8	66	Cottonwood
67	11	67	Cottonwood
68	3	68	Cottonwood
69	6	69	Cottonwood
70	9	70	Cottonwood
71	10	71	Cottonwood
82	2	82	Sycamore
83	4	83	Sycamore
84	5	84	Sycamore
85	7	85	Sycamore
86	8	86	Sycamore
87	11	87	Sycamore
88	3	88	Sycamore
89	6	89	Sycamore
90	9	90	Sycamore
91	10	91	Sycamore
\.


--
-- Data for Name: session_speakers; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.session_speakers (session_id, speaker_id) FROM stdin;
1	40
2	4
3	5
4	1
5	15
6	20
7	21
8	1
9	4
10	20
11	5
12	7
13	23
14	24
15	22
16	21
17	22
18	23
19	7
20	24
21	15
22	2
23	3
24	19
25	25
26	26
27	27
28	25
29	9
30	27
31	16
32	9
33	16
34	28
35	29
36	26
37	28
38	19
39	3
40	2
41	29
42	13
43	30
44	32
45	31
46	8
47	31
48	32
49	13
50	8
51	30
62	34
63	39
64	38
65	33
66	34
67	38
68	33
69	39
70	33
71	33
82	37
83	17
84	17
85	14
86	36
87	35
88	36
89	37
90	14
91	35
1	40
2	4
3	5
4	1
5	15
6	20
7	21
8	1
9	4
10	20
11	5
12	7
13	23
14	24
15	22
16	21
17	22
18	23
19	7
20	24
21	15
22	2
23	3
24	19
25	25
26	26
27	27
28	25
29	9
30	27
31	16
32	9
33	16
34	28
35	29
36	26
37	28
38	19
39	3
40	2
41	29
42	13
43	30
44	32
45	31
46	8
47	31
48	32
49	13
50	8
51	30
62	34
63	39
64	38
65	33
66	34
67	38
68	33
69	39
70	33
71	33
82	37
83	17
84	17
85	14
86	36
87	35
88	36
89	37
90	14
91	35
\.


--
-- Data for Name: session_tags; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.session_tags (session_id, tag_id) FROM stdin;
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.sessions (session_id, session_name, session_description, session_length) FROM stdin;
1	Keynote - The Golden Age of Software		45
2	A Better Way to Access Data with Spring Data		60
3	A Deep Dive Into Spring IoC		60
4	Building RESTful APIs with Spring Data Rest		60
5	Spring Integration Quick Start		60
6	Building Microservices with Spring		60
7	Spring Cloud Primer		60
8	Spring Boot in 30 Minutes		30
9	Testing Spring Applications		30
10	Writing Your First Advice with Spring AOP		30
11	IntelliJ IDEA Tips and Tricks		30
12	Functional Programming in Java		60
13	Making the Switch from Java to Kotlin		60
14	Mastering Concurrency in Java		60
15	Mastering Object-Orientated Programming in Java		60
16	SOLID Principles in Java		60
17	The Most Important Java Design Patterns		60
18	Using EasyMock for Java Testing		30
19	IntelliJ IDEA Debugging Secrets		30
20	Getting Started with Java Flight Recorder		30
21	Clean Code Principls for Java Developers		30
22	Designing Large Scale ASP.NET Core Applications		60
23	Application Security in ASP.NET Core Apps		60
24	.NET's HttpClient: The Missing Manual		60
25	Using Vue.js in ASP.NET and ASP.NET Core Applications		60
27	Modern Desktop Applications in .NET		60
28	SignalR Quickstart		30
29	Visual Studio Tips and Tricks		30
30	Logging in ASP.NET Core		30
31	A Quick Tour of MiniProfiler		30
32	Demystifying Dependency Injection in .NET		60
26	Clean Code Practices in C#		60
33	Microservices Architectures using ASP.NET Core		60
34	Advanced Techniques in Entity Framework Core		60
35	C# Language Features You May Not Know About		60
36	Asynchronous Programming in .NET		60
37	Advanced Entity Framework Core		60
38	A lap around the .NET Command Line Interface (CLI)		30
39	Deploying .NET Apps with Azure DevOps		30
40	Code Analysis for .NET Projects		30
41	Better Logging with Serilog		30
42	Deploying Web Applications to Azure		60
43	Getting Started with Azure Cognitive Services		60
44	Building Microservices with Azure Functions		60
45	Big Data and Analytics on the Azure Platform		60
46	Getting Started with CosmosDB		60
47	Securing Azure Services		60
48	Azure Event Grid Quickstart		30
49	Managing Azure with the Azure CLI		30
50	Migrating to Azure SQL		30
51	Understanding the Azure Blockchain Service		30
62	Building Hybrid Cloud Architectures in AWS		60
63	Migrating On-Premises Applications to AWS		60
64	IOT Solutions Using AWS		60
65	Getting Startedd with Machine Learning in AWS		60
66	DevOps on the AWS Platform		60
67	Serverless Computing on AWS		60
68	Amazon DynamoDB Quickstart		30
69	Understanding the Amazon Elastic Kubernetes Service		30
70	Creating Your First Data Lake in AWS		30
71	Migrating to Amazon Aurora		30
82	How Agile Are You Really?		60
83	Better Retrospectives		60
84	Developer to Leader		60
85	Selling Your Ideas to Leadership: A Guide for Technology Professionals		60
86	Creating a Culture of Learning		60
87	The Seven Habits of Highly Effective Developers		60
88	Writing Better User Stories		30
89	Techniques for Better Estimates		30
90	Communication Skills for the Technology Professional		30
91	Personal Kanban		30
\.


--
-- Data for Name: speakers; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.speakers (speaker_id, first_name, last_name, title, company, speaker_bio, speaker_photo) FROM stdin;
1	Sergio	Becker	Senior Developer	MicroOcean Software	Test	\N
2	James	Lowrey	Solutions Architect	Fabrikam Industries	Test	\N
3	Gloria	Franklin	Enerprise Architect	Carved Rock Online	Test	\N
4	Lori	Vanhoose	Java Technical Lead	National Bank	Test	\N
5	Raymond	Hall	Senior Developer	City Power and Electric	Test	\N
6	Sam	Vasquez	Software Analyst	Globalmantics Consulting	Test	\N
7	Justin	Clark	Principal Engineer	Tangerine Hippopotamus Consulting	Test	\N
8	Barbara	Williams	Senior DBA	Contoso	Test	\N
9	James	Sharp	Technical Lead	Adventureworks	Test	\N
10	Julie	Rowe	Software Architect	Northwind Trading	Test	\N
11	Tonya	Burke	Senior Cloud Consultant	Big Data Consulting	Test	\N
12	Nicole	Perry	Engineering Manager	World Wide Importers	Test	\N
13	James	Curtis	Cloud Architect	Farmington Research	Test	\N
14	Patti	White	Program Manager	State Investments	Test	\N
15	Andrew	Graham	Software Architect	Property Insurance Group	Test	\N
16	Lenn	van der Brug	Solutions Architect	Globalmantics Consulting	Test	\N
17	Stephan	Leijtens	Application Development Manager	Bank Europe	Test	\N
18	Anja	Koehler	Software Engineer	Contoso	Test	\N
19	Petra	Holtzmann	Senior API Engineer	European Investment Partners	Test	\N
20	Jens	Lundberg	Consultant	Aqua Sky Consulting	Test	\N
21	Linda	Carver	Senior Developer	Chicago Technology Research	Test	\N
22	Ronald	McMillian	Software Architect	National Bank	Test	\N
23	Dustin	Finn	Software Engineer	Globalmantics Consulting	Test	\N
24	Sharon	Johnson	Solutions Architect	National Aerospace Technologies	Test	\N
25	Karen	McClure	.NET Architect	Adventureworks	Test	\N
26	Matthew	Thompson	Technical Lead	Fabrikam Industries	Test	\N
27	Chris	Moore	Solutions Architect	World Wide Importers	Test	\N
28	Ken	Perry	Software Engineer	International Industrial Works	Test	\N
29	Christie	Fournier	Application Architect	National Software Services	Test	\N
30	Jenny	Lee	Azure Cloud Architect	Prairie Cloud Solutions	Test	\N
31	Alicia	Peng	Senior Cloud Consultant	Cloud Management Partners	Test	\N
32	Page	Reid	Lead Azure Engineer	State Investments	Test	\N
33	Anke	Holzman	Senior AWS Consultant	Cloud Management Partners	Test	\N
34	Dylan	Wilkinson	Principal AWS Engineer	Cloud Native Labs	Test	\N
35	Henry	Duke	Engineering Lead	Wired Brain Coffee	Test	\N
36	Cynthia	Crandall	Senior Business Analyst	Wired Brain Coffee	Test	\N
37	Clara	Dawson	Agile Coach	Agile Coaches Inc	Test	\N
38	Ann	Martinez	Senior AWS Consultant	Western Consulting Services	Test	\N
39	James	King	Staff AWS Engineer	Northern States Bank	Test	\N
40	Simon	Williams	Chief Technology Officer	NorthernSoft Systems	Test	\N
42	Chris	Kenma	Professional Footballer	Forest Green Rovers	Striker for Forest Green Rovers for last 3 years | EFL2 Player of the Year | EFL2 Top Goal Scorer 2016/17	\N
\.


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.tags (tag_id, description) FROM stdin;
1	.NET
2	Java
3	Python
4	JavaScript
5	Angular
6	React
7	Vue.js
8	Web
9	Architecture
10	Soft Skills
11	Agile
12	Cloud
\.


--
-- Data for Name: ticket_prices; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.ticket_prices (ticket_price_id, ticket_type_code, pricing_category_code, base_price) FROM stdin;
1	P	E	800.00
2	P	R	1000.00
3	P	L	1200.00
4	S	E	500.00
5	S	R	700.00
6	S	L	1000.00
7	C	E	100.00
8	C	R	200.00
9	C	L	300.00
\.


--
-- Data for Name: ticket_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.ticket_types (ticket_type_code, ticket_type_name, description, includes_workshop) FROM stdin;
P	Premium	Access to all conference events plus attend the workshop of your choice.	t
S	Standard	Access to all conference keynotes,sessions,community open spaces and the exhibition hall	f
C	Community	Access to keynotes,community open spaces and the exhibition hall	f
\.


--
-- Data for Name: time_slots; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.time_slots (time_slot_id, time_slot_date, start_time, end_time, is_keynote_time_slot) FROM stdin;
1	2020-04-09	09:00:00	09:45:00	t
2	2020-04-09	10:00:00	11:00:00	f
3	2020-04-09	11:15:00	11:45:00	f
4	2020-04-09	12:45:00	13:45:00	f
5	2020-04-09	14:00:00	15:00:00	f
6	2020-04-09	15:15:00	15:45:00	f
7	2020-04-09	16:00:00	17:00:00	f
8	2020-04-10	09:00:00	10:00:00	f
9	2020-04-10	10:15:00	11:15:00	f
10	2020-04-10	11:30:00	12:00:00	f
11	2020-04-10	13:00:00	14:00:00	f
12	2020-04-10	14:15:00	15:00:00	t
\.


--
-- Data for Name: workshop_registrations; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.workshop_registrations (workshop_id, attendee_ticket_id) FROM stdin;
\.


--
-- Data for Name: workshop_speakers; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.workshop_speakers (workshop_id, speaker_id) FROM stdin;
\.


--
-- Data for Name: workshops; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.workshops (workshop_id, workshop_name, description, requirements, room, capacity) FROM stdin;
1	More Effective Agile Practices			Cedar	50
2	Azure DevOps One Day Bootcamp			Cherry	50
3	Level Up Your Architecure Skills			Maple	20
4	Building Microservices with Spring			Aspen	30
5	SQL Server Performance Tuning			Hickory	40
6	Serverless Architectures Using AWS			Cottonwood	30
7	Architecting Large Scale React Applications			Sycamore	30
8	Machine Learning Quick Start			Chestnut	40
9	Data Analytics with Tableau			Poplar	40
10	Python for Enterprise Developers			Birch	40
11	Hands on Vue.js			Ash	40
12	Building APIs in ASP.NET Core			Oak	30
\.


--
-- Name: attendee_tickets_attendee_ticket_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.attendee_tickets_attendee_ticket_id_seq', 1, true);


--
-- Name: attendees_attendee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.attendees_attendee_id_seq', 1, true);


--
-- Name: discount_codes_discount_code_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.discount_codes_discount_code_id_seq', 1, true);


--
-- Name: session_schedule_schedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.session_schedule_schedule_id_seq', 92, true);


--
-- Name: sessions_session_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.sessions_session_id_seq', 93, true);


--
-- Name: speakers_speaker_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.speakers_speaker_id_seq', 43, true);


--
-- Name: tags_tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.tags_tag_id_seq', 13, true);


--
-- Name: ticket_prices_ticket_price_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.ticket_prices_ticket_price_id_seq', 10, true);


--
-- Name: time_slots_time_slot_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.time_slots_time_slot_id_seq', 13, true);


--
-- Name: workshops_workshop_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.workshops_workshop_id_seq', 13, true);


--
-- Name: attendee_tickets attendee_tickets_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.attendee_tickets
    ADD CONSTRAINT attendee_tickets_pkey PRIMARY KEY (attendee_ticket_id);


--
-- Name: attendees attendees_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.attendees
    ADD CONSTRAINT attendees_pkey PRIMARY KEY (attendee_id);


--
-- Name: discount_codes discount_codes_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.discount_codes
    ADD CONSTRAINT discount_codes_pkey PRIMARY KEY (discount_code_id);


--
-- Name: pricing_categories pricing_categories_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pricing_categories
    ADD CONSTRAINT pricing_categories_pkey PRIMARY KEY (pricing_category_code);


--
-- Name: session_schedule session_schedule_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.session_schedule
    ADD CONSTRAINT session_schedule_pkey PRIMARY KEY (schedule_id);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (session_id);


--
-- Name: speakers speakers_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.speakers
    ADD CONSTRAINT speakers_pkey PRIMARY KEY (speaker_id);


--
-- Name: tags tags_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (tag_id);


--
-- Name: ticket_prices ticket_prices_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ticket_prices
    ADD CONSTRAINT ticket_prices_pkey PRIMARY KEY (ticket_price_id);


--
-- Name: ticket_types ticket_types_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ticket_types
    ADD CONSTRAINT ticket_types_pkey PRIMARY KEY (ticket_type_code);


--
-- Name: time_slots time_slots_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.time_slots
    ADD CONSTRAINT time_slots_pkey PRIMARY KEY (time_slot_id);


--
-- Name: workshops workshops_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workshops
    ADD CONSTRAINT workshops_pkey PRIMARY KEY (workshop_id);


--
-- Name: attendee_tickets attendee_tickets_attendee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.attendee_tickets
    ADD CONSTRAINT attendee_tickets_attendee_id_fkey FOREIGN KEY (attendee_id) REFERENCES public.attendees(attendee_id);


--
-- Name: attendee_tickets attendee_tickets_discount_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.attendee_tickets
    ADD CONSTRAINT attendee_tickets_discount_code_id_fkey FOREIGN KEY (discount_code_id) REFERENCES public.discount_codes(discount_code_id);


--
-- Name: attendee_tickets attendee_tickets_ticket_price_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.attendee_tickets
    ADD CONSTRAINT attendee_tickets_ticket_price_id_fkey FOREIGN KEY (ticket_price_id) REFERENCES public.ticket_prices(ticket_price_id);


--
-- Name: session_schedule session_schedule_session_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.session_schedule
    ADD CONSTRAINT session_schedule_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(session_id);


--
-- Name: session_schedule session_schedule_time_slot_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.session_schedule
    ADD CONSTRAINT session_schedule_time_slot_id_fkey FOREIGN KEY (time_slot_id) REFERENCES public.time_slots(time_slot_id);


--
-- Name: session_speakers session_speakers_session_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.session_speakers
    ADD CONSTRAINT session_speakers_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(session_id);


--
-- Name: session_speakers session_speakers_speaker_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.session_speakers
    ADD CONSTRAINT session_speakers_speaker_id_fkey FOREIGN KEY (speaker_id) REFERENCES public.speakers(speaker_id);


--
-- Name: session_tags session_tags_session_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.session_tags
    ADD CONSTRAINT session_tags_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(session_id);


--
-- Name: session_tags session_tags_tag_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.session_tags
    ADD CONSTRAINT session_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tags(tag_id);


--
-- Name: ticket_prices ticket_prices_pricing_category_code_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ticket_prices
    ADD CONSTRAINT ticket_prices_pricing_category_code_fkey FOREIGN KEY (pricing_category_code) REFERENCES public.pricing_categories(pricing_category_code);


--
-- Name: ticket_prices ticket_prices_ticket_type_code_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ticket_prices
    ADD CONSTRAINT ticket_prices_ticket_type_code_fkey FOREIGN KEY (ticket_type_code) REFERENCES public.ticket_types(ticket_type_code);


--
-- Name: workshop_registrations workshop_registrations_attendee_ticket_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workshop_registrations
    ADD CONSTRAINT workshop_registrations_attendee_ticket_id_fkey FOREIGN KEY (attendee_ticket_id) REFERENCES public.attendee_tickets(attendee_ticket_id);


--
-- Name: workshop_registrations workshop_registrations_workshop_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workshop_registrations
    ADD CONSTRAINT workshop_registrations_workshop_id_fkey FOREIGN KEY (workshop_id) REFERENCES public.workshops(workshop_id);


--
-- Name: workshop_speakers workshop_speakers_speaker_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workshop_speakers
    ADD CONSTRAINT workshop_speakers_speaker_id_fkey FOREIGN KEY (speaker_id) REFERENCES public.speakers(speaker_id);


--
-- Name: workshop_speakers workshop_speakers_workshop_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workshop_speakers
    ADD CONSTRAINT workshop_speakers_workshop_id_fkey FOREIGN KEY (workshop_id) REFERENCES public.workshops(workshop_id);


--
-- PostgreSQL database dump complete
--

